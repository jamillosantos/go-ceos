@{
	import "github.com/jamillosantos/go-ceous/generator/models"

	import myasthurts "github.com/lab259/go-my-ast-hurts"

	var pkg *myasthurts.Package
	var model *models.Model
}

var @model.BaseSchemaName() = ceous.NewBaseSchema(
	"@model.TableName",
	"",
@for _, field := range model.Columns {
	@raw("\n")
	@:	ceous.NewSchemaField("@field.Column"
	@if len(field.Modifiers) > 0 {
		@for _, m := range field.Modifiers {
			@raw(", ")@raw(m())
		}
	}@),
}
)

@if model.PK != nil {
@
@:func (model @raw("*")@model.Name@:) GetID() interface{} {
@		return model.@model.PK.Name
@	}
}

@{RenderColumnAddress(_buffer, model)}
@{RenderColumnValue(_buffer, model)}

type @model.SchemaName()@: struct {
	*ceous.BaseSchema
	@raw("\n")
@for _, field := range model.SchemaFields {
@	@field.Name@if field.SchemaType == "" {
		@	ceous.SchemaField
	} else {
		@	schema@field.SchemaType@:
	}
}
}