// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: tpl/model.gohtml

package tpl

import (
	"github.com/jamillosantos/go-ceous/generator/models"
	myasthurts "github.com/lab259/go-my-ast-hurts"
	"github.com/sipin/gorazor/gorazor"
	"io"
	"strings"
)

// Model generates tpl/model.gohtml
func Model(pkg *myasthurts.Package, model *models.Model) string {
	var _b strings.Builder
	RenderModel(&_b, pkg, model)
	return _b.String()
}

// RenderModel render tpl/model.gohtml
func RenderModel(_buffer io.StringWriter, pkg *myasthurts.Package, model *models.Model) {
	_buffer.WriteString("\n\nvar ")
	_buffer.WriteString(gorazor.HTMLEscape(model.BaseSchemaName()))
	_buffer.WriteString(" = ceous.NewBaseSchema(\n\t\"")
	_buffer.WriteString(gorazor.HTMLEscape(model.TableName))
	_buffer.WriteString("\",\n\t\"\",")
	for _, field := range model.Fields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\tceous.NewSchemaField(\"")
		_buffer.WriteString(gorazor.HTMLEscape(field.FieldName))
		_buffer.WriteString("\"),")
	}
	_buffer.WriteString("\n)\n\nfunc (model ")
	_buffer.WriteString(("*"))
	_buffer.WriteString(gorazor.HTMLEscape(model.Name))
	_buffer.WriteString(") ColumnAddress(name string) (interface{}, error) {\n\tswitch name {")
	for _, field := range model.Fields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\tcase \"")
		_buffer.WriteString(gorazor.HTMLEscape(field.FieldName))
		_buffer.WriteString("\":\n\t\treturn &model.")
		_buffer.WriteString(gorazor.HTMLEscape(field.Name))
		_buffer.WriteString(", nil")
	}
	_buffer.WriteString("\n\tdefault:\n\t\treturn nil, errors.Wrapf(ceous.ErrFieldNotFound, \"field %s not found\", name)\n\t}\n}\n\nfunc (model ")
	_buffer.WriteString(("*"))
	_buffer.WriteString(gorazor.HTMLEscape(model.Name))
	_buffer.WriteString(") Value(name string) (interface{}, error) {\n\tswitch name {")
	for _, field := range model.Fields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\tcase \"")
		_buffer.WriteString(gorazor.HTMLEscape(field.FieldName))
		_buffer.WriteString("\":\n\t\treturn model.")
		_buffer.WriteString(gorazor.HTMLEscape(field.Name))
		_buffer.WriteString(", nil")
	}
	_buffer.WriteString("\n\tdefault:\n\t\treturn nil, errors.Wrapf(ceous.ErrFieldNotFound, \"field %s not found\", name)\n\t}\n}\n\ntype ")
	_buffer.WriteString(gorazor.HTMLEscape(model.SchemaName()))
	_buffer.WriteString(" struct {\n\t*ceous.BaseSchema")
	for _, field := range model.Fields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\t")
		_buffer.WriteString(gorazor.HTMLEscape(field.Name))
		_buffer.WriteString("\tceous.SchemaField")
	}
	_buffer.WriteString("\n}")

}
