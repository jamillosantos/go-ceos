// This file is generated by gorazor 2.0.1
// DON'T modified manually
// Should edit source file and re-generate: tpl/model.gohtml

package tpl

import (
	"github.com/jamillosantos/go-ceous/generator/models"
	myasthurts "github.com/lab259/go-my-ast-hurts"
	"github.com/sipin/gorazor/gorazor"
	"io"
	"strings"
)

// Model generates tpl/model.gohtml
func Model(pkg *myasthurts.Package, model *models.Model) string {
	var _b strings.Builder
	RenderModel(&_b, pkg, model)
	return _b.String()
}

// RenderModel render tpl/model.gohtml
func RenderModel(_buffer io.StringWriter, pkg *myasthurts.Package, model *models.Model) {
	_buffer.WriteString("\n\nvar ")
	_buffer.WriteString(gorazor.HTMLEscape(model.BaseSchemaName()))
	_buffer.WriteString(" = ceous.NewBaseSchema(\n\t\"")
	_buffer.WriteString(gorazor.HTMLEscape(model.TableName))
	_buffer.WriteString("\",\n\t\"\",")
	for _, field := range model.Fields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\tceous.NewSchemaField(\"")
		_buffer.WriteString(gorazor.HTMLEscape(field.FieldName))
		_buffer.WriteString("\"")

		if len(field.Modifiers) > 0 {
			for _, m := range field.Modifiers {

				_buffer.WriteString((", "))
				_buffer.WriteString((m()))

			}
		}
		_buffer.WriteString("),")
	}
	_buffer.WriteString("\n)")
	if model.PK != nil {

		_buffer.WriteString("\nfunc (model ")
		_buffer.WriteString(("*"))
		_buffer.WriteString(gorazor.HTMLEscape(model.Name))
		_buffer.WriteString(") GetID() interface{} {\n\t\treturn model.")
		_buffer.WriteString(gorazor.HTMLEscape(model.PK.Name))
		_buffer.WriteString("\n\t}")
	}
	RenderColumnAddress(_buffer, model)
	RenderColumnValue(_buffer, model)
	_buffer.WriteString("\n\ntype ")
	_buffer.WriteString(gorazor.HTMLEscape(model.SchemaName()))
	_buffer.WriteString(" struct {\n\t*ceous.BaseSchema")
	for _, field := range model.SchemaFields {

		_buffer.WriteString(("\n"))

		_buffer.WriteString("\t")
		_buffer.WriteString(gorazor.HTMLEscape(field.Name))
		_buffer.WriteString("\tceous.SchemaField")
	}
	_buffer.WriteString("\n}")

}
