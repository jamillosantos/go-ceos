@{
	import "github.com/jamillosantos/go-ceous/generator/models"
	import . "github.com/jamillosantos/go-ceous/generator/helpers"

	var env *models.Environment
}

type Transaction struct {
	*ceous.BaseTxRunner
}

func NewTransaction(tx *ceous.BaseTxRunner) *Transaction {
	return &Transaction{
		BaseTxRunner: tx,
	}
}

@for _, query := range env.Queries {@
// @query.FullName@: creates a new query from a transaction.
func (c *Transaction) @query.FullName@:Query(options ...ceous.CeousOption) @Pointer@query.FullName@: {
	return New@query.FullName@:(append(options, ceous.WithRunner(c))...)
}
}

@for _, store := range env.Stores {@
// @store.FullName creates a new store from a transaction.
func (c *Transaction) @store.FullName@:Store(options ...ceous.CeousOption) @Pointer@store.FullName {
	return New@store.FullName@:(append(options, ceous.WithRunner(c))...)
}
}
